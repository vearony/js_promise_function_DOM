{"mappings":"ACEA,SAAS,EAAQ,CAAO,CAAE,CAAS,EACjC,OAAO,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA7B,EACE,EAAQ,gBAAgB,CAAC,EAAW,WAGlC,EAFgB,UAAuC,MAAA,CAA7B,EAAU,qBAA4C,MAAA,CAAzB,EAAQ,QAAQ,CAAC,UAAmB,MAAA,CAAX,EAAQ,EAAE,EAG5F,EACF,EACF,CAEA,IAAM,EAAe,SAAC,CAAtB,EACE,IAAM,EAAM,SAAS,aAAa,CAAC,OAEnC,EAAI,SAAS,CAAC,GAAG,CAAC,WAClB,EAAI,WAAW,CAAG,EAElB,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,EAEM,EAAa,SAAS,cAAc,CAAC,SACrC,EAAgB,SAAS,cAAc,CAAC,YACxC,EAAS,SAAS,cAAc,CAAC,UAEvC,EAAQ,EAAY,SAAS,IAAI,CAAC,GAClC,EAAQ,EAAe,SAAS,IAAI,CAAC,GACrC,EAAQ,EAAQ,SAAS,IAAI,CAAC,GAE9B,EAAQ,EAAY,SAAS,IAAI,CAAC,GAClC,EAAQ,EAAe,SAAS,IAAI,CAAC,GAErC,EAAQ,EAAY,QAAQ,IAAI,CAAC,GACjC,EAAQ,EAAe,QAAQ,IAAI,CAAC,GACpC,EAAQ,EAAQ,QAAQ,IAAI,CAAC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction waitFor(element, eventName) {\n    return new Promise(function(resolve, reject) {\n        element.addEventListener(eventName, function() {\n            var message = \"It was \".concat(eventName, \" on the element: \").concat(element.nodeName, \", id: \").concat(element.id);\n            resolve(message);\n        });\n    });\n}\nvar printMessage = function(message) {\n    var div = document.createElement(\"div\");\n    div.classList.add(\"message\");\n    div.textContent = message;\n    document.body.appendChild(div);\n};\nvar loginField = document.getElementById(\"login\");\nvar passwordField = document.getElementById(\"password\");\nvar button = document.getElementById(\"submit\");\nwaitFor(loginField, \"click\").then(printMessage);\nwaitFor(passwordField, \"click\").then(printMessage);\nwaitFor(button, \"click\").then(printMessage);\nwaitFor(loginField, \"input\").then(printMessage);\nwaitFor(passwordField, \"input\").then(printMessage);\nwaitFor(loginField, \"blur\").then(printMessage);\nwaitFor(passwordField, \"blur\").then(printMessage);\nwaitFor(button, \"blur\").then(printMessage);\n\n//# sourceMappingURL=index.249f5a2f.js.map\n","'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise((resolve, reject) => {\n    element.addEventListener(eventName, () => {\n      const message = `It was ${eventName} on the element: ${element.nodeName}, id: ${element.id}`;\n\n      resolve(message);\n    });\n  });\n}\n\nconst printMessage = (message) => {\n  const div = document.createElement('div');\n\n  div.classList.add('message');\n  div.textContent = message;\n\n  document.body.appendChild(div);\n};\n\nconst loginField = document.getElementById('login');\nconst passwordField = document.getElementById('password');\nconst button = document.getElementById('submit');\n\nwaitFor(loginField, 'click').then(printMessage);\nwaitFor(passwordField, 'click').then(printMessage);\nwaitFor(button, 'click').then(printMessage);\n\nwaitFor(loginField, 'input').then(printMessage);\nwaitFor(passwordField, 'input').then(printMessage);\n\nwaitFor(loginField, 'blur').then(printMessage);\nwaitFor(passwordField, 'blur').then(printMessage);\nwaitFor(button, 'blur').then(printMessage);\n"],"names":["waitFor","element","eventName","Promise","resolve","reject","addEventListener","concat","nodeName","id","printMessage","message","div","document","createElement","classList","add","textContent","body","appendChild","loginField","getElementById","passwordField","button","then"],"version":3,"file":"index.249f5a2f.js.map"}